--[[ eval/debug.lua

  A debug evaluator for aydede.

  This evaluator simply pretty-prints the AST generated by the reader. It is intended for
  use in debugging the parsing of Scheme source. The goal here is that parsing a form
  like:

       (foo (bar "string") (baz 2.0))

  should produce output like:

       list = {
         { symbol = foo },
         { list = {
           { symbol = bar },
           { string = string } } }
         { list = {
           { symbol = baz },
           { float = 2.0 } } } }

  Copyright (c) 2014, Joshua Ballanco.

  Licensed under the BSD 2-Clause License. See COPYING for full license details.

--]]


local debug = {}

local function print_val(v)
  print("Printing val: "..tostring(v))
  if type(v) == "table" then
    print_table(v)
  else
    print(tostring(v))
  end
end

local function print_table(t)
  print("Printing table: "..tostring(t))
  for k,v in pairs(t) do
    print(tostring(k))
    if type(v) == "table" then
      print_table(v)
    else
      print_val(v)
    end
  end
end

function debug.eval(prog)
  print("Printing program: "..tostring(prog))
  print_val(prog)
end
