--[[ eval/debug.lua

  A debug evaluator for aydede.

  This evaluator simply pretty-prints the AST generated by the reader. It is intended for
  use in debugging the parsing of Scheme source. The goal here is that parsing a form
  like:

       (foo (bar "string") (baz 2.0))

  should produce output like:

       list = {
         { symbol = foo },
         { list = {
           { symbol = bar },
           { string = string } } },
         { list = {
           { symbol = baz },
           { float = 2.0 } } } }

  Copyright (c) 2014, Joshua Ballanco.

  Licensed under the BSD 2-Clause License. See COPYING for full license details.

--]]


local debug = {}

local print_indent, print_node

local indent = 0

function print_indent(str)
  print(string.rep("\t", indent)..str)
end

function print_node(node)
  if type(node) == "table" and node.type == "list" then
    print_indent("list = {")
    indent = indent + 1
    print_node(node.car)
    print_node(node.cdr)
    indent = indent - 1
    print_indent("}")
  else
    print_indent(tostring(node))
  end
end

function debug.eval(prog)
  for _,node in ipairs(prog) do
    print_node(node)
  end
end

return debug
